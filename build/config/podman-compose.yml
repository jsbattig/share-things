# Standard test configuration for ShareThings with host networking
version: '3'
services:
  frontend:
    image: linner.ddns.net:4443/docker.io.proxy/nginx:alpine
    network_mode: "host"  # Use host networking instead of bridge
    volumes:
      - ./client/dist:/usr/share/nginx/html:ro
    restart: always
    environment:
      - PORT=15000
    # Create a custom nginx.conf that listens on port 15000 instead of 80
    command:
      - sh
      - -c
      - |
        mkdir -p /usr/share/nginx/html/health &&
        echo '{"status":"ok"}' > /usr/share/nginx/html/health/index.json &&
        echo 'server {
          listen 15000;
          server_name localhost;
          location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
          }
          location /health {
            default_type application/json;
            return 200 "{\"status\":\"ok\"}";
          }
        }' > /etc/nginx/conf.d/default.conf &&
        nginx -g 'daemon off;'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15000/health"]
      interval: 5s
      timeout: 3s
      retries: 3
  
  backend:
    image: linner.ddns.net:4443/docker.io.proxy/node:18-alpine
    network_mode: "host"  # Use host networking instead of bridge
    environment:
      - PORT=15001
    command: ["node", "-e", "const http=require('http');const server=http.createServer((req,res)=>{if(req.url==='/health'){res.writeHead(200,{'Content-Type':'application/json'});res.end(JSON.stringify({status:'ok'}));}else{res.writeHead(404);res.end();}});server.listen(15001);console.log('Server listening on port 15001');"]
    restart: always
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:15001/health"]
      interval: 5s
      timeout: 3s
      retries: 3
